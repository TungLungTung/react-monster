{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","user","name","src","id","email","CardList","users","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","this","filteredUsers","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iUAaeA,EAVF,SAACC,GACV,OACG,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAKF,EAAMG,KAAKC,KAAMC,IAAG,gCAA2BL,EAAMG,KAAKG,GAAtC,4BAC9B,6BAAyBN,EAAMG,KAAKC,MAA3BJ,EAAMG,KAAKG,IACpB,+BAAON,EAAMG,KAAKI,YCMdC,EAVE,SAACR,GACd,OACI,qBAAKC,UAAU,YAAf,SACKD,EAAMS,MAAMC,KAAI,SAACP,GAAD,OACb,cAAC,EAAD,CAAoBA,KAAMA,GAAfA,EAAKG,UCDjBK,G,MALG,SAAC,GAAkC,IAAjCC,EAAgC,EAAhCA,YAAcC,EAAkB,EAAlBA,aAC9B,OACI,uBAAOC,KAAK,SAASb,UAAU,SAASW,YAAaA,EAAaG,SAAUF,MCyErEG,E,kDArEb,aAAe,IAAD,8BACZ,gBAeFH,aAAe,SAACI,GACd,OAAO,EAAKC,SAAS,CAACC,YAAcF,EAAEG,OAAOC,SAf7C,EAAKC,MAAQ,CACXb,MAAO,GACPU,YAAa,IAJH,E,qDASd,WAAqB,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAf,GAAK,OAAI,EAAKS,SAAS,CAAET,MAAOA,S,oBAQ1C,WAAS,MAEwBkB,KAAKL,MAA5Bb,EAFD,EAECA,MAAOU,EAFR,EAEQA,YAITS,EAAgBnB,EAAMoB,QAAO,SAAC1B,GAClC,OAAOA,EAAKC,KAAK0B,cAAcC,SAASZ,EAAYW,kBAGtD,OACE,sBAAK7B,UAAU,MAAf,UACE,iDACA,cAAC,EAAD,CACEW,YAAc,eACdC,aAAgBc,KAAKd,eAEvB,cAAC,EAAD,CAAUJ,MAAOmB,W,GAxCPI,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.f0e1bf30.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './card.styles.css'\r\n\r\nconst Card = (props) => {\r\n    return (\r\n       <div className=\"card-container\">\r\n           <img alt={props.user.name} src={`https://robohash.org/=${props.user.id}?set=set3&size=180x180`} />\r\n           <h2 key={props.user.id}>{props.user.name}</h2>\r\n           <span>{props.user.email}</span>\r\n       </div>    \r\n    );\r\n}\r\n \r\nexport default Card;","import React from \"react\";\r\nimport './card-list.styles.css'\r\nimport Card from \"../card/card.component\"; \r\n\r\nconst CardList = (props) => {\r\n    return (\r\n        <div className=\"card-list\">\r\n            {props.users.map((user) => (\r\n                <Card key={user.id} user={user} />\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardList;","import './search-box.styles.css'\r\n\r\nconst SearchBox = ({placeholder , handleChange}) => {\r\n    return (\r\n        <input type='search' className='search' placeholder={placeholder} onChange={handleChange} />\r\n    );\r\n}\r\nexport default SearchBox;","import { Component } from 'react';\nimport './App.css';\nimport CardList from './components/card-list/card-list.component';\nimport SearchBox from './components/search-box/search-box.component';\n\nclass App extends Component {\n\n  // Su dung classes\n  constructor() {\n    super();\n    this.state = {\n      users: [],\n      searchField: '',\n    }\n  }\n\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(users => this.setState({ users: users }))\n  }\n\n  // Handle change fire khi ung dung dc call\n  handleChange = (e) => {\n    return this.setState({searchField : e.target.value});\n  }\n\n  render() {\n    // Khai bao ke thua cai ben tran\n    const { users, searchField } = this.state;\n    // Code ben tren tuong tu\n    // const users = this.state.users;\n    // const searchField = this.state.searchField;\n    const filteredUsers = users.filter((user) => {\n      return user.name.toLowerCase().includes(searchField.toLowerCase()); // Search tieng gi cung dc  \n    });\n\n    return (\n      <div className=\"App\">\n        <h1>Monster Rolorex</h1>\n        <SearchBox\n          placeholder = 'Search users'\n          handleChange = {this.handleChange}\n        />\n        <CardList users={filteredUsers}>\n        </CardList>\n        {/* <header className=\"App-header\">\n        <p>{ this.state.name } is {this.state.age} years old</p>\n        <button onClick={() => {return this.setState({ name: 'Huyen', age: 35})}}>Change info</button>\n      </header> */}\n      </div>\n    )\n  }\n}\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Hello <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}